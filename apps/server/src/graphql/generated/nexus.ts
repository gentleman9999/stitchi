/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../context"
import type { core, connectionPluginCore } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AllNewsletterIssuesFilter: { // input type
    first: number; // Int!
    skip?: number | null; // Int
  }
  FulfillmentCreateInput: { // input type
    carrier: string; // String!
    orderId: string; // String!
    trackingNumber: string; // String!
    trackingUrl: string; // String!
  }
  OrderCartCreateInput: { // input type
    includeFulfillment: boolean; // Boolean!
    items: NexusGenInputs['OrderCartCreateItemsInput'][]; // [OrderCartCreateItemsInput!]!
    printLocations: NexusGenInputs['OrderCartCreatePrintLocationInput'][]; // [OrderCartCreatePrintLocationInput!]!
    productEntityId: number; // Int!
  }
  OrderCartCreateItemsInput: { // input type
    productVariantEntityId: number; // Int!
    quantity: number; // Int!
  }
  OrderCartCreatePrintLocationInput: { // input type
    colorCount: number; // Int!
  }
  OrderCartUpdateInput: { // input type
    orderId: string; // ID!
  }
  ProductKey: { // input type
    id: string; // ID!
    prices: NexusGenInputs['ProductPrice']; // ProductPrice!
  }
  ProductPrice: { // input type
    price: NexusGenInputs['ProductPriceValue']; // ProductPriceValue!
  }
  ProductPriceValue: { // input type
    value: number; // Float!
  }
  QuoteGeneratePrintLocationInput: { // input type
    colorCount: number; // Int!
  }
  SubscriberCreateInput: { // input type
    email: string; // String!
  }
}

export interface NexusGenEnums {
  GlobalRole: "CUSTOMER" | "SUPERADMIN"
  MembershipRole: "OWNER"
  NewsletterIssueStatus: "ARCHIVED" | "CONFIRMED" | "DRAFT"
  OrderItemType: "BIG_COMMERCE_PRODUCT" | "CUSTOM"
  OrderPaymentStatus: "NOT_PAID" | "PAID" | "PARTIALLY_PAID" | "PARTIALLY_REFUNDED" | "REFUNDED"
  OrderType: "CART"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Fulfillment: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fulfillmentOrderItems: NexusGenRootTypes['FulfillmentOrderItem'][]; // [FulfillmentOrderItem!]!
    fulfillmentTrackingInfoId: string; // String!
    id: string; // ID!
    orderId: string; // String!
    organizationId: string; // String!
    trackingInfo: NexusGenRootTypes['FulfillmentTrackingInfo']; // FulfillmentTrackingInfo!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: string; // String!
  }
  FulfillmentCreatePayload: { // root type
    fulfillment?: NexusGenRootTypes['Fulfillment'] | null; // Fulfillment
  }
  FulfillmentOrderItem: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fulfillmentId: string; // String!
    id: string; // ID!
    orderItemId: string; // String!
    quantity: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  FulfillmentTrackingInfo: { // root type
    carrier: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    trackingNumber: string; // String!
    trackingUrl: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Membership: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    organizationId: string; // String!
    role?: NexusGenEnums['MembershipRole'] | null; // MembershipRole
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userId: string; // String!
  }
  Mutation: {};
  Newsletter: {};
  NewsletterIssue: { // root type
    authorNames: Array<string | null>; // [String]!
    contentHtml: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    displayAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // ID!
    publishedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    slug: string; // String!
    status: NexusGenEnums['NewsletterIssueStatus']; // NewsletterIssueStatus!
    subtitle: string; // String!
    thumbnailUrl?: string | null; // String
    title: string; // String!
  }
  NewsletterIssueConnection: { // root type
    edges?: Array<NexusGenRootTypes['NewsletterIssueEdge'] | null> | null; // [NewsletterIssueEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  NewsletterIssueEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['NewsletterIssue'] | null; // NewsletterIssue
  }
  Order: { // root type
    customerEmail?: string | null; // String
    customerFullName?: string | null; // String
    customerPhone?: string | null; // String
    humanOrderId: string; // String!
    humanPaymentStatus: string; // String!
    id: string; // ID!
    items: NexusGenRootTypes['OrderItem'][]; // [OrderItem!]!
    paymentStatus: NexusGenEnums['OrderPaymentStatus']; // OrderPaymentStatus!
    subtotalPriceCents: number; // Int!
    totalPriceCents: number; // Int!
    totalProcessingFeeCents: number; // Int!
    totalShippingCents: number; // Int!
    totalTaxCents: number; // Int!
    type: NexusGenEnums['OrderType']; // OrderType!
    userId?: string | null; // String
  }
  OrderCartCreatePayload: { // root type
    order?: NexusGenRootTypes['Order'] | null; // Order
  }
  OrderCartUpdatePayload: { // root type
    order?: NexusGenRootTypes['Order'] | null; // Order
  }
  OrderItem: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    orderId: string; // String!
    productId?: string | null; // String
    productVariantId?: string | null; // String
    quantity: number; // Int!
    title: string; // String!
    totalPriceCents: number; // Int!
    type: NexusGenEnums['OrderItemType']; // OrderItemType!
    unitPriceCents: number; // Int!
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Organization: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name?: string | null; // String
    role?: NexusGenEnums['GlobalRole'] | null; // GlobalRole
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
  }
  PrintLocation: { // root type
    colorCount: number; // Int!
    totalCostInCents?: number | null; // Int
  }
  Product: { // root type
    id: string; // ID!
  }
  Query: {};
  Quote: { // root type
    id: string; // ID!
    printLocationCount: number; // Int!
    printLocations: NexusGenRootTypes['PrintLocation'][]; // [PrintLocation!]!
    productTotalCostCents: number; // Int!
    productUnitCostCents: number; // Int!
  }
  Subscriber: { // root type
    email: string; // String!
    id: string; // String!
  }
  SubscriberCreatePayload: { // root type
    subscriber?: NexusGenRootTypes['Subscriber'] | null; // Subscriber
  }
  User: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email?: string | null; // String
    emailVerified?: boolean | null; // Boolean
    familyName?: string | null; // String
    givenName?: string | null; // String
    id?: string | null; // ID
    lastLogin?: NexusGenScalars['DateTime'] | null; // DateTime
    loginsCount?: number | null; // Int
    name?: string | null; // String
    nickname?: string | null; // String
    phoneNumber?: string | null; // String
    phoneVerified?: boolean | null; // Boolean
    picture?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    username?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Fulfillment: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fulfillmentOrderItems: NexusGenRootTypes['FulfillmentOrderItem'][]; // [FulfillmentOrderItem!]!
    fulfillmentTrackingInfoId: string; // String!
    id: string; // ID!
    orderId: string; // String!
    organizationId: string; // String!
    trackingInfo: NexusGenRootTypes['FulfillmentTrackingInfo']; // FulfillmentTrackingInfo!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    userId: string; // String!
  }
  FulfillmentCreatePayload: { // field return type
    fulfillment: NexusGenRootTypes['Fulfillment'] | null; // Fulfillment
  }
  FulfillmentOrderItem: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    fulfillmentId: string; // String!
    id: string; // ID!
    orderItemId: string; // String!
    quantity: number; // Int!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  FulfillmentTrackingInfo: { // field return type
    carrier: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    trackingNumber: string; // String!
    trackingUrl: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Membership: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    organization: NexusGenRootTypes['Organization'] | null; // Organization
    organizationId: string; // String!
    role: NexusGenEnums['MembershipRole'] | null; // MembershipRole
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    user: NexusGenRootTypes['User'] | null; // User
    userId: string; // String!
  }
  Mutation: { // field return type
    fulfillmentCreate: NexusGenRootTypes['FulfillmentCreatePayload'] | null; // FulfillmentCreatePayload
    orderCartCreate: NexusGenRootTypes['OrderCartCreatePayload'] | null; // OrderCartCreatePayload
    subscriberCreate: NexusGenRootTypes['SubscriberCreatePayload'] | null; // SubscriberCreatePayload
    userBoostrap: NexusGenRootTypes['User'] | null; // User
  }
  Newsletter: { // field return type
    allNewsletterIssues: NexusGenRootTypes['NewsletterIssueConnection'] | null; // NewsletterIssueConnection
    newsletterIssue: NexusGenRootTypes['NewsletterIssue']; // NewsletterIssue!
  }
  NewsletterIssue: { // field return type
    authorNames: Array<string | null>; // [String]!
    contentHtml: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    displayAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string; // ID!
    publishedAt: NexusGenScalars['DateTime'] | null; // DateTime
    slug: string; // String!
    status: NexusGenEnums['NewsletterIssueStatus']; // NewsletterIssueStatus!
    subtitle: string; // String!
    thumbnailUrl: string | null; // String
    title: string; // String!
  }
  NewsletterIssueConnection: { // field return type
    edges: Array<NexusGenRootTypes['NewsletterIssueEdge'] | null> | null; // [NewsletterIssueEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  NewsletterIssueEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['NewsletterIssue'] | null; // NewsletterIssue
  }
  Order: { // field return type
    customer: NexusGenRootTypes['User'] | null; // User
    customerEmail: string | null; // String
    customerFullName: string | null; // String
    customerId: string | null; // String
    customerPhone: string | null; // String
    fulfillments: NexusGenRootTypes['Fulfillment'][]; // [Fulfillment!]!
    humanOrderId: string; // String!
    humanPaymentStatus: string; // String!
    id: string; // ID!
    items: NexusGenRootTypes['OrderItem'][]; // [OrderItem!]!
    paymentStatus: NexusGenEnums['OrderPaymentStatus']; // OrderPaymentStatus!
    subtotalPriceCents: number; // Int!
    totalPriceCents: number; // Int!
    totalProcessingFeeCents: number; // Int!
    totalShippingCents: number; // Int!
    totalTaxCents: number; // Int!
    type: NexusGenEnums['OrderType']; // OrderType!
    userId: string | null; // String
  }
  OrderCartCreatePayload: { // field return type
    order: NexusGenRootTypes['Order'] | null; // Order
  }
  OrderCartUpdatePayload: { // field return type
    order: NexusGenRootTypes['Order'] | null; // Order
  }
  OrderItem: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    orderId: string; // String!
    productId: string | null; // String
    productVariantId: string | null; // String
    quantity: number; // Int!
    title: string; // String!
    totalPriceCents: number; // Int!
    type: NexusGenEnums['OrderItemType']; // OrderItemType!
    unitPriceCents: number; // Int!
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  Organization: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    memberships: Array<NexusGenRootTypes['Membership'] | null> | null; // [Membership]
    name: string | null; // String
    role: NexusGenEnums['GlobalRole'] | null; // GlobalRole
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
  }
  PrintLocation: { // field return type
    colorCount: number; // Int!
    totalCostInCents: number | null; // Int
  }
  Product: { // field return type
    id: string; // ID!
    priceCents: number; // Int!
    quote: NexusGenRootTypes['Quote']; // Quote!
  }
  Query: { // field return type
    _products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    newsletter: NexusGenRootTypes['Newsletter'] | null; // Newsletter
    order: NexusGenRootTypes['Order'] | null; // Order
    viewer: NexusGenRootTypes['Membership'] | null; // Membership
  }
  Quote: { // field return type
    id: string; // ID!
    printLocationCount: number; // Int!
    printLocations: NexusGenRootTypes['PrintLocation'][]; // [PrintLocation!]!
    productTotalCostCents: number; // Int!
    productUnitCostCents: number; // Int!
  }
  Subscriber: { // field return type
    email: string; // String!
    id: string; // String!
  }
  SubscriberCreatePayload: { // field return type
    subscriber: NexusGenRootTypes['Subscriber'] | null; // Subscriber
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    email: string | null; // String
    emailVerified: boolean | null; // Boolean
    familyName: string | null; // String
    givenName: string | null; // String
    id: string | null; // ID
    lastLogin: NexusGenScalars['DateTime'] | null; // DateTime
    loginsCount: number | null; // Int
    name: string | null; // String
    nickname: string | null; // String
    phoneNumber: string | null; // String
    phoneVerified: boolean | null; // Boolean
    picture: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    username: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Fulfillment: { // field return type name
    createdAt: 'DateTime'
    fulfillmentOrderItems: 'FulfillmentOrderItem'
    fulfillmentTrackingInfoId: 'String'
    id: 'ID'
    orderId: 'String'
    organizationId: 'String'
    trackingInfo: 'FulfillmentTrackingInfo'
    updatedAt: 'DateTime'
    userId: 'String'
  }
  FulfillmentCreatePayload: { // field return type name
    fulfillment: 'Fulfillment'
  }
  FulfillmentOrderItem: { // field return type name
    createdAt: 'DateTime'
    fulfillmentId: 'String'
    id: 'ID'
    orderItemId: 'String'
    quantity: 'Int'
    updatedAt: 'DateTime'
  }
  FulfillmentTrackingInfo: { // field return type name
    carrier: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    trackingNumber: 'String'
    trackingUrl: 'String'
    updatedAt: 'DateTime'
  }
  Membership: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    organization: 'Organization'
    organizationId: 'String'
    role: 'MembershipRole'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'String'
  }
  Mutation: { // field return type name
    fulfillmentCreate: 'FulfillmentCreatePayload'
    orderCartCreate: 'OrderCartCreatePayload'
    subscriberCreate: 'SubscriberCreatePayload'
    userBoostrap: 'User'
  }
  Newsletter: { // field return type name
    allNewsletterIssues: 'NewsletterIssueConnection'
    newsletterIssue: 'NewsletterIssue'
  }
  NewsletterIssue: { // field return type name
    authorNames: 'String'
    contentHtml: 'String'
    createdAt: 'DateTime'
    displayAt: 'DateTime'
    id: 'ID'
    publishedAt: 'DateTime'
    slug: 'String'
    status: 'NewsletterIssueStatus'
    subtitle: 'String'
    thumbnailUrl: 'String'
    title: 'String'
  }
  NewsletterIssueConnection: { // field return type name
    edges: 'NewsletterIssueEdge'
    pageInfo: 'PageInfo'
  }
  NewsletterIssueEdge: { // field return type name
    cursor: 'String'
    node: 'NewsletterIssue'
  }
  Order: { // field return type name
    customer: 'User'
    customerEmail: 'String'
    customerFullName: 'String'
    customerId: 'String'
    customerPhone: 'String'
    fulfillments: 'Fulfillment'
    humanOrderId: 'String'
    humanPaymentStatus: 'String'
    id: 'ID'
    items: 'OrderItem'
    paymentStatus: 'OrderPaymentStatus'
    subtotalPriceCents: 'Int'
    totalPriceCents: 'Int'
    totalProcessingFeeCents: 'Int'
    totalShippingCents: 'Int'
    totalTaxCents: 'Int'
    type: 'OrderType'
    userId: 'String'
  }
  OrderCartCreatePayload: { // field return type name
    order: 'Order'
  }
  OrderCartUpdatePayload: { // field return type name
    order: 'Order'
  }
  OrderItem: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    orderId: 'String'
    productId: 'String'
    productVariantId: 'String'
    quantity: 'Int'
    title: 'String'
    totalPriceCents: 'Int'
    type: 'OrderItemType'
    unitPriceCents: 'Int'
    updatedAt: 'DateTime'
  }
  Organization: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    memberships: 'Membership'
    name: 'String'
    role: 'GlobalRole'
    updatedAt: 'DateTime'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
  }
  PrintLocation: { // field return type name
    colorCount: 'Int'
    totalCostInCents: 'Int'
  }
  Product: { // field return type name
    id: 'ID'
    priceCents: 'Int'
    quote: 'Quote'
  }
  Query: { // field return type name
    _products: 'Product'
    newsletter: 'Newsletter'
    order: 'Order'
    viewer: 'Membership'
  }
  Quote: { // field return type name
    id: 'ID'
    printLocationCount: 'Int'
    printLocations: 'PrintLocation'
    productTotalCostCents: 'Int'
    productUnitCostCents: 'Int'
  }
  Subscriber: { // field return type name
    email: 'String'
    id: 'String'
  }
  SubscriberCreatePayload: { // field return type name
    subscriber: 'Subscriber'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    emailVerified: 'Boolean'
    familyName: 'String'
    givenName: 'String'
    id: 'ID'
    lastLogin: 'DateTime'
    loginsCount: 'Int'
    name: 'String'
    nickname: 'String'
    phoneNumber: 'String'
    phoneVerified: 'Boolean'
    picture: 'String'
    updatedAt: 'DateTime'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    fulfillmentCreate: { // args
      input: NexusGenInputs['FulfillmentCreateInput']; // FulfillmentCreateInput!
    }
    orderCartCreate: { // args
      input: NexusGenInputs['OrderCartCreateInput']; // OrderCartCreateInput!
    }
    subscriberCreate: { // args
      input: NexusGenInputs['SubscriberCreateInput']; // SubscriberCreateInput!
    }
  }
  Newsletter: {
    allNewsletterIssues: { // args
      after?: string | null; // String
      first: number; // Int!
    }
    newsletterIssue: { // args
      slug: string; // String!
    }
  }
  Product: {
    quote: { // args
      includeFulfillment?: boolean | null; // Boolean
      printLocations: NexusGenInputs['QuoteGeneratePrintLocationInput'][]; // [QuoteGeneratePrintLocationInput!]!
      quantity: number; // Int!
    }
  }
  Query: {
    _products: { // args
      products: NexusGenInputs['ProductKey'][]; // [ProductKey!]!
    }
    order: { // args
      id: string; // ID!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}