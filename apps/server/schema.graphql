### This file was generated by Nexus Schema
### Do not make changes to this file directly


input DateFilterInput {
  gte: String
  lte: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Fulfillment {
  createdAt: DateTime!
  fulfillmentOrderItems: [FulfillmentOrderItem!]!
  fulfillmentTrackingInfoId: String!
  id: ID!
  orderId: String!
  organizationId: String
  trackingInfo: FulfillmentTrackingInfo!
  updatedAt: DateTime!
  userId: String
}

input FulfillmentCreateInput {
  carrier: String!
  orderId: String!
  trackingNumber: String!
  trackingUrl: String!
}

type FulfillmentCreatePayload {
  fulfillment: Fulfillment
}

type FulfillmentOrderItem {
  createdAt: DateTime!
  fulfillmentId: String!
  id: ID!
  orderItemId: String!
  quantity: Int!
  updatedAt: DateTime!
}

type FulfillmentTrackingInfo {
  carrier: String!
  createdAt: DateTime!
  id: ID!
  trackingNumber: String!
  trackingUrl: String!
  updatedAt: DateTime!
}

enum GlobalRole {
  CUSTOMER
  SUPERADMIN
}

type MailingAddress {
  address1: String
  address2: String
  city: String
  company: String
  country: String
  createdAt: DateTime!
  firstName: String
  id: ID!
  lastName: String
  latitude: Float
  longitude: Float
  name: String
  organizationId: String
  phone: String
  province: String
  provinceCode: String
  updatedAt: DateTime!
  userId: String
  zip: String
}

input MailingAddressCreateInput {
  address1: String
  address2: String
  city: String
  company: String
  country: String
  firstName: String
  lastName: String
  name: String
  phone: String
  province: String
  provinceCode: String
  zip: String
}

type MailingAddressCreatePayload {
  mailingAddress: MailingAddress
}

type Membership {
  createdAt: DateTime!
  hasOrders: Boolean!
  id: ID!
  orders(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String
    filter: MembershipOrdersFilterInput

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): OrderConnection
  organization: Organization
  organizationId: String!
  role: MembershipRole
  updatedAt: DateTime
  user: User
  userId: String!
}

input MembershipOrdersFilterInput {
  where: MembershipOrdersWhereFilterInput
}

input MembershipOrdersWhereFilterInput {
  createdAt: DateFilterInput
}

enum MembershipRole {
  OWNER
}

type Mutation {
  fulfillmentCreate(input: FulfillmentCreateInput!): FulfillmentCreatePayload

  """Creates a new mailing address for the user"""
  mailingAddressCreate(input: MailingAddressCreateInput!): MailingAddressCreatePayload

  """Creates a new order during user Cart"""
  orderCartCreate(input: OrderCartCreateInput!): OrderCartCreatePayload

  """Confirms an order with a customers details"""
  orderConfirm(input: OrderConfirmInput!): OrderConfirmPayload
  paymentIntentCreate(input: PaymentIntentCreateInput!): PaymentIntentCreatePayload

  """Creates a new email subscriber"""
  subscriberCreate(input: SubscriberCreateInput!): SubscriberCreatePayload

  """Bootstraps a new user with necessary resources"""
  userBoostrap: User
}

type Order {
  createdAt: DateTime!
  customer: User
  customerEmail: String
  customerFirstName: String
  customerId: String
  customerLastName: String
  customerPhone: String
  fulfillments: [Fulfillment!]!
  humanOrderId: String!
  humanPaymentStatus: String!
  id: ID!
  itemSummaries: [OrderItemSummary!]!
  items: [OrderItem!]!
  lastPaymentMethod: PaymentMethod
  paymentIntents: [PaymentIntent!]!
  paymentStatus: OrderPaymentStatus!
  shippingAddress: MailingAddress
  shippingAddressId: String
  subtotalPriceCents: Int!
  totalAmountDueCents: Int!
  totalAmountPaidCents: Int!
  totalAmountRefundedCents: Int!
  totalPriceCents: Int!
  totalProcessingFeeCents: Int!
  totalShippingCents: Int!
  totalTaxCents: Int!
  type: OrderType!
  updatedAt: DateTime
  userId: String
}

input OrderCartCreateInput {
  includeFulfillment: Boolean!
  items: [OrderCartCreateItemsInput!]!
  printLocations: [OrderCartCreatePrintLocationInput!]!
  productEntityId: Int!
  shippingAddressId: String
}

input OrderCartCreateItemsInput {
  productVariantEntityId: Int!
  quantity: Int!
}

type OrderCartCreatePayload {
  order: Order
}

input OrderCartCreatePrintLocationInput {
  colorCount: Int!
}

input OrderConfirmInput {
  customerEmail: String!
  customerFirstName: String!
  customerLastName: String!
  customerPhone: String!
  orderId: ID!
  shippingAddress: OrderConfirmMailingAddressInput!
}

input OrderConfirmMailingAddressInput {
  address1: String
  address2: String
  city: String
  company: String
  country: String
  firstName: String
  lastName: String
  name: String
  phone: String
  province: String
  provinceCode: String
  zip: String
}

type OrderConfirmPayload {
  order: Order
}

type OrderConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [OrderEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type OrderEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Order
}

type OrderItem {
  createdAt: DateTime!
  id: ID!
  orderId: String!
  productId: String
  productVariantId: String
  quantity: Int!
  title: String!
  totalPriceCents: Int!
  type: OrderItemType!
  unitPriceCents: Int!
  updatedAt: DateTime
}

type OrderItemSummary {
  id: ID!
  quantity: Int!
  title: String!
  totalPriceCents: Int!
}

enum OrderItemType {
  BIG_COMMERCE_PRODUCT
  CUSTOM
}

enum OrderPaymentStatus {
  NOT_PAID
  PAID
  PARTIALLY_PAID
  PARTIALLY_REFUNDED
  REFUNDED
}

enum OrderType {
  CART
  CONFIRMED
}

type Organization {
  createdAt: DateTime!
  id: ID!
  memberships: [Membership]
  name: String
  role: GlobalRole
  updatedAt: DateTime
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
}

type PaymentIntent {
  amount: Int!
  clientSecret: String
  id: String!
}

input PaymentIntentCreateInput {
  orderId: String!
}

type PaymentIntentCreatePayload {
  paymentIntent: PaymentIntent
}

type PaymentMethod {
  billingDetails: PaymentMethodBillingDetails
  card: PaymentMethodCard
  id: String!
  type: String!
}

type PaymentMethodBillingDetails {
  city: String
  country: String
  email: String
  line1: String
  line2: String
  name: String
  phone: String
  postalCode: String
  state: String
}

type PaymentMethodCard {
  brand: String
  expMonth: Int
  expYear: Int
  last4: String
}

type PrintLocation {
  colorCount: Int!
  totalCostInCents: Int
}

type Product {
  id: ID!
  priceCents: Int!
  quote(includeFulfillment: Boolean, printLocations: [QuoteGeneratePrintLocationInput!]!, quantity: Int!): Quote!
}

input ProductKey {
  id: ID!
  prices: ProductPrice!
}

input ProductPrice {
  price: ProductPriceValue!
}

input ProductPriceValue {
  value: Float!
}

type Query {
  _products(products: [ProductKey!]!): [Product]
  order(id: ID!): Order
  viewer: Membership
}

type Quote {
  id: ID!
  printLocationCount: Int!
  printLocations: [PrintLocation!]!

  """The cost of the product with shipping, taxes, and other."""
  productTotalCostCents: Int!

  """The cost of the product without shipping, taxes, or other."""
  productUnitCostCents: Int!
}

input QuoteGeneratePrintLocationInput {
  colorCount: Int!
}

input StringFilterInput {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  notIn: [String!]
  startsWith: String
}

type Subscriber {
  email: String!
  id: String!
}

input SubscriberCreateInput {
  email: String!
}

type SubscriberCreatePayload {
  subscriber: Subscriber
}

type User {
  createdAt: DateTime
  email: String
  emailVerified: Boolean
  familyName: String
  givenName: String
  id: ID
  lastLogin: DateTime
  loginsCount: Int
  name: String
  nickname: String
  phoneNumber: String
  phoneVerified: Boolean
  picture: String
  updatedAt: DateTime
  username: String
}