### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Catalog {
  createdAt: DateTime!
  id: ID!
  product(id: ID!): CatalogProduct
  products(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): CatalogProductConnection
  updatedAt: DateTime
}

type CatalogProduct {
  alternativeImages: [ImageUrl]!
  catalog: Catalog
  catalogId: String!
  createdAt: DateTime!
  id: ID!
  isActive: Boolean!
  manufacturer: Manufacturer
  manufacturerId: String!
  name: String!
  primaryImage: ImageUrl
  primaryImageId: String
  primaryVendorId: String
  updatedAt: DateTime
  vendor: Vendor
}

type CatalogProductConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [CatalogProductEdge]

  """Flattened list of CatalogProduct type"""
  nodes: [CatalogProduct]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type CatalogProductEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: CatalogProduct
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum GlobalRole {
  CUSTOMER
  SUPERADMIN
}

type ImageUrl {
  height: Int!
  id: ID!
  url: String!
  width: Int!
}

type Manufacturer {
  createdAt: DateTime!
  id: ID!
  name: String!
  updatedAt: DateTime
}

type Membership {
  createdAt: DateTime!
  id: ID!
  organization: Organization
  organizationId: String!
  role: MembershipRole
  updatedAt: DateTime
  user: User
  userId: String!
}

enum MembershipRole {
  OWNER
}

type Mutation {
  """Bootstraps a new user with necessary resources"""
  userBoostrap: User
}

type Organization {
  createdAt: DateTime!
  id: ID!
  memberships: [Membership]
  name: String
  role: GlobalRole
  updatedAt: DateTime
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  catalog: Catalog
  viewer: Membership
}

type User {
  createdAt: DateTime
  email: String
  emailVerified: Boolean
  familyName: String
  givenName: String
  id: ID
  lastLogin: DateTime
  loginsCount: Int
  name: String
  nickname: String
  phoneNumber: String
  phoneVerified: Boolean
  picture: String
  updatedAt: DateTime
  username: String
}

type Vendor {
  createdAt: DateTime!
  id: ID!
  name: String!
  updatedAt: DateTime
}
